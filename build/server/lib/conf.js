// Generated by CoffeeScript 1.10.0
var conf, configFile, fs, readFile;

fs = require('fs');

conf = {};

configFile = '/etc/cozy/controller.json';


/*
    Read configuration file
        * Use default configuration if file doesn't exist
        * Return error if configuration file is not a correct json
 */

readFile = function(callback) {
  var data, error;
  if (fs.existsSync(configFile)) {
    try {
      if (process.env.NODE_ENV !== 'test') {
        data = require(configFile);
      } else {
        data = fs.readFileSync(configFile, 'utf8');
        data = JSON.parse(data);
      }
      return callback(null, data);
    } catch (error) {
      return callback(null, {});
    }
  } else {
    return callback(null, {});
  }
};


/*
    Initialize configuration
        * Use configuration store in configuration file or default configuration
        * conf : Current configuration
 */

module.exports.init = function(callback) {
  return readFile(function(err, data) {
    if (err != null) {
      return callback(err);
    } else {
      conf = {
        npm_registry: data.npm_registry || false,
        npm_strict_ssl: data.npm_strict_ssl || false,
        dir_app_log: data.dir_app_log || '/usr/local/var/log/cozy',
        dir_app_bin: data.dir_app_bin || '/usr/local/cozy/apps',
        dir_app_data: data.dir_app_data || '/usr/local/var/cozy',
        file_token: data.file_token || '/etc/cozy/stack.token',
        bind_ip_proxy: data.bind_ip_proxy || '0.0.0.0',
        display_bind: data.bind_ip_proxy != null
      };
      conf.file_stack = data.file_stack || conf.dir_app_bin + '/stack.json';
      if (process.env.BIND_IP_PROXY) {
        conf.bind_ip_proxy = process.env.BIND_IP_PROXY;
      }
      if (data.env != null) {
        conf.env = {
          global: data.env.global || false,
          "data-system": data.env['data-system'] || false,
          home: data.env.home || false,
          proxy: data.env.proxy || false
        };
      }
      return callback();
    }
  });
};


/*
    Return configuration for <arg>
 */

module.exports.get = function(arg) {
  return conf[arg];
};
